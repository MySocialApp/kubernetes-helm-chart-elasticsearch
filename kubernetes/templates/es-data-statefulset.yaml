{{- $esDataVersion := .Values.elasticsearchDataImageVersion | trunc 1 -}}
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ template "kubernetes.name" . }}-data
  namespace: {{ .Release.Namespace }}
  labels:
    component: {{ template "kubernetes.name" . }}
    role: data
spec:
  serviceName: {{ template "kubernetes.name" . }}
  updateStrategy:
    type: "RollingUpdate"
  replicas: {{ .Values.elasticsearchDataReplicaCount }}
  template:
    metadata:
      labels:
        component: {{ template "kubernetes.name" . }}
        role: data
        deployedDate: "{{ .Release.elasticsearchDataDeployedDate }}"
    spec:
      nodeSelector:
        type: {{ .Values.elasticsearchDataNodeSelector }}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: component
                operator: In
                values:
                - {{ template "kubernetes.name" . }}
              - key: role
                operator: In
                values:
                - data
            topologyKey: kubernetes.io/hostname
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command:
          - "/bin/sh"
          - "-c"
          - "sleep 30 ; sysctl -w vm.max_map_count=262144"
        securityContext:
          privileged: true
      terminationGracePeriodSeconds: 30000
      containers:
      - name: {{ template "kubernetes.name" . }}-data
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
        image: {{if eq $esDataVersion "5"}}quay.io/pires/docker-elasticsearch-kubernetes{{end}}{{if eq $esDataVersion "2"}}quay.io/mysocialapp/docker-elasticsearch-kubernetes{{end}}:{{ .Values.elasticsearchDataImageVersion }}
        command: ["/elasticsearch/scripts/run.sh"]
        env:
        - name: NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: "CLUSTER_NAME"
          value: "{{ .Release.Namespace }}"
        - name: NODE_MASTER
          value: "false"
        - name: NODE_INGEST
          value: "false"
        - name: HTTP_ENABLE
          value: "false"
        - name: DISCOVERY_SERVICE
          value: elasticsearch-discovery
        - name: "ES_JAVA_OPTS"
          value: "{{ .Values.elasticsearchDataJavaOptions }}"
        lifecycle:
          postStart:
            exec:
              command: ["/elasticsearch/scripts/postStart.sh"]
          preStop:
            httpGet:
              path: /_cluster/health?wait_for_status=green&timeout=28800s
              port: 9300
        livenessProbe:
          tcpSocket:
            port: 9300
          initialDelaySeconds: 60
          periodSeconds: 10
        ports:
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - name: {{ template "kubernetes.name" . }}-data-storage
          mountPath: /data
        - name: {{ template "kubernetes.name" . }}-data-config
          mountPath: /elasticsearch/config
        - name: {{ template "kubernetes.name" . }}-data-scripts
          mountPath: /elasticsearch/scripts
      volumes:
        - name: {{ template "kubernetes.name" . }}-data-storage
          hostPath:
            path: /mnt/data/{{ .Release.Namespace }}/{{ template "kubernetes.name" . }}/data
        - name: {{ template "kubernetes.name" . }}-data-config
          configMap:
            name: {{ template "kubernetes.name" . }}-data-config
        - name: {{ template "kubernetes.name" . }}-data-scripts
          configMap:
            name: {{ template "kubernetes.name" . }}-data-scripts
            defaultMode: 0775