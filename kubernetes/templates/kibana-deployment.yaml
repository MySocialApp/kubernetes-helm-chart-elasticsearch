{{- if .Values.kibanaEnabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: kibana
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: kibana
spec:
  replicas: 1
  strategy:
    type: "Recreate"
  selector:
    matchLabels:
     app: kibana
  template:
    metadata:
      labels:
        app: kibana
    spec:
      nodeSelector:
{{ toYaml .Values.kibanaNodeSelector | indent 6 }}
      containers:
      - name: kibana
        image: {{ .Values.kibanaImage }}:{{ .Values.elasticsearchImageVersion }}
        env:
        - name: ELASTICSEARCH_URL
          value: "http://{{ template "kubernetes.name" . }}"
{{- if .Values.kibanaExtraVars }}
{{ toYaml .Values.kibanaExtraVars | indent 8 }}
{{- end }}
        resources:
{{ toYaml .Values.kibanaResources | indent 10 }}
        ports:
        - containerPort: 5601
          name: kibana
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 10
          periodSeconds: 10
          successThreshold: 3
          timeoutSeconds: 5
          exec:
            command:
              - sh
              - -c
              - |
                #!/usr/bin/env bash -e
                http () {
                    local path="${1}"
                    if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
                      BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
                    else
                      BASIC_AUTH=''
                    fi
                    curl -XGET -s --fail ${BASIC_AUTH} 127.0.0.1:5601${path}
                }

                http "/app/kibana"
{{- end -}}