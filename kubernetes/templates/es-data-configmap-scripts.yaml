kind: ConfigMap
apiVersion: v1
metadata:
  name: {{ template "kubernetes.name" . }}-data-scripts
  namespace: {{ .Release.Namespace }}
  labels:
    heritage: {{ .Release.Service | quote }}
    release: {{ .Release.Name | quote }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    app: "{{ template "kubernetes.name" . }}"
    role: data
data:
  postStart.sh: |-
    #!/bin/sh

    # Add dependencies
    yum -y install iproute sysvinit-tools

    while [ $(ss -l -t '( sport = :9300 )' | grep -c LISTEN) -eq 0 ] ; do
      echo "waiting port to be opened"
      sleep 5
      pidof java || exit 1
    done

    # Apply specific config
    curl -XPUT 'http://localhost:9200/_all/_settings?preserve_existing=true' -d '{
      "index.unassigned.node_left.delayed_timeout" : "15m"
    }'

    exit 0
  readiness.sh: |-
    #!/usr/bin/env bash

    set -e

    START_FILE=/tmp/.es_start_file
    http () {
        local path="${1}"
        if [ -n "${ELASTIC_USERNAME}" ] && [ -n "${ELASTIC_PASSWORD}" ]; then
          BASIC_AUTH="-u ${ELASTIC_USERNAME}:${ELASTIC_PASSWORD}"
        else
          BASIC_AUTH=''
        fi
        curl -XGET -s -k --fail ${BASIC_AUTH} http://127.0.0.1:9300${path}
    }

    if [ -f "${START_FILE}" ]; then
        echo 'Elasticsearch is already running, lets check the node is healthy'
        http "/"
    fi
    # Do not add green cluster check to avoid issue when you want to add nodes in a red cluster mode
    # with more than 2 nodes down
  run_override.sh: |-
    #!/bin/sh

    chown elasticsearch. /usr/share/elasticsearch/data
    /usr/local/bin/docker-entrypoint.sh
